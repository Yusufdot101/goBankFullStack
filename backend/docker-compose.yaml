services:
    db:
        image: postgres:17.6-alpine
        container_name: gobank-db
        environment:
            POSTGRES_USER: myuser
            POSTGRES_PASSWORD: mypass
            POSTGRES_DB: bankdb
        ports:
            - "5433:5432" # optional, for host access
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U myuser -d bankdb"]
            interval: 5s
            timeout: 3s
            retries: 5
        networks:
            - gobank-net
        volumes:
            - pgdata:/var/lib/postgresql/data

    migrate:
        image: migrate/migrate
        restart: "no"
        container_name: gobank-migrate
        depends_on:
            db:
                condition: service_healthy
        networks:
            - gobank-net
        volumes:
            - ./migrations:/migrations
        command:
            [
                "-path",
                "/migrations",
                "-database",
                "postgres://myuser:mypass@db:5432/bankdb?sslmode=disable",
                "up",
            ]

    backend:
        build: .
        container_name: gobank-app
        depends_on:
            db:
                condition: service_healthy
        networks:
            - gobank-net
        environment:
            - TRUSTED_ORIGINS=http://localhost:3000
            - ENV=DEV
            - DB_DSN=postgres://myuser:mypass@db:5432/bankdb?sslmode=disable
            - PORT=8080
            - SMTP_SENDER=ym <noreply@ym.net>
            - SMTP_HOST=mailhog
            - SMTP_PORT=1025
        ports:
            - "8080:8080"

    mailhog:
        image: mailhog/mailhog
        ports:
            - "1026:1025" # incase there is one running already so to avoid conflic
            - "8026:8025" # same reason
        networks:
            - gobank-net
volumes:
    pgdata:

networks:
    gobank-net:
        driver: bridge
